<?php
//////////////////////////
// CENSURE CLASS 1.0.0 //
/////////////////////////

/**
 * @author zavorokhina.yuliya@gmail.com
 * Filter abusive words in Russian.
 *
 * Key features:
 * - Fully covers the abusive words.
 *
 * Some examples:
 *
 * Censure::clean('Original phrase with abusive words');
 * Censure::is_bad('Original phrase with abusive words');
 * Censure::replace('Original phrase with abusive words');
 *
 */
 
class Censure {
	
	const REPLACEMENT = '***';

	/**
	 * Set array of abusive words
	 *
	 * @param string $pattern - saving array of abusive words 
	 * @return string - 
	 */
	 
	public static $patterns = array(
	    'анал[а-я]+','анус',
		'бзд[а-я]+','бля[а-я]+',
		'выеб[а-я]+','вафлист','вафлист[а-я]+','впенд[а-я]+','впиз[а-я]+','въеб[а-я]+','въяб[а-я]+','выёб[а-я]+','высер','вхуя[а-я]+','вошка',
		'говн[а-я]+','говён[а-я]+','гондон[а-я]+','гомос[а-я]+','гомик[а-я]+','гомик','голощелка','гумозник',
		'дроч[а-я]+','драч[а-я]+','дрюч[а-я]+','дерьм[а-я]+','доеб[а-я]+','[а-я]+охуя','[а-я]+хера','дрист[а-я]+','[а-я]+дрисн[а-я]+','досос[а-я]+',
		'досас[а-я]+','долбан[а-я]+','дилдо','давалка','додик','дойки','доснашив[а-я]+','доснош[а-я]+','долбоеб[а-я]+',
		'доусрач[а-я]+','досикат[а-я]+','досикив[а-я]+','досир[а-я]+','допиз[а-я]+','доусеру','дуплиться','долбежка','даваха',
		'ебнут[а-я]+','еба[а-я]+','ебл[а-я]+',
		'ёб[а-я]+','eдрёна[а-я]+','едрить[а-я]+','ерепени[а-я]+','ерунд[а-я]+', 
		'жопа[а-я]+','жоп[а-я]+','жопа','жид','жопник','жопочник','жопошник',  
		'задрот','задрот[а-я]+', 'забулдыга','загадить','зад','задница','заноза','зануда','зараза','засранец','засеря','затычка',
		'изманд[а-я]+', 'идиот','изверг','изгой','йух',
		'клитор','кобель','карга','кретин','курва',
		'лох','лох[а-я]+','лахудра', 'легавый', 'лизать','лупоглазый',
		'манд[а-я]+','монда[а-я]+','манда', 'монда','мудох[а-я]+','макака','маразматик','мегера','мерзавец','мент','мразь','мракобес','мракобесие','мудак','мудило','мудозвон','мычать',
		'наёб[а-я]+','наеб[а-я]+', 'нечисть', 'ничтожество',
		'охуе[а-я]+','обалдуй','обезьяна','обосранец','обосранная','оболтус','образина','овца','осел','остолоп','отребье','отродье',
		'пизд[а-я]+','пизда','падаль','падла','паскуда','паразит','паскудный','потаскуха','пентюх','перечница','подонок','подстилка','позорник','порнуха', 
		'полудурок','потаскун','потаскуха','придурок','прихвостень','прорва','пройдоха', 
		'проститутка','прохвост','прохиндей', 'проходимец', 'пустобрёх','пустозвон','пустомеля','пьянчуга','пьянь',
		'разъеб[а-я]+','распизд[а-я]+','раздолбай','рвань','ренегат','рогоносец',
		'соси','соса[а-я]+','срать','ссать','сука','сволочь','стерва','сучка' ,'сукин', 
		'трах[а-я]+','тварь','тёлка','толстозадый','тошнотворное','трепотня','тряпка','тупица','тупоголовый','туполобый','тупоумный','тягомотину' ,
		'уеб[а-я]+','уебище', 'Ублюдок','ублюдочный','урод','уродина',
		'фуфл[а-я]+', 'фаллос', 'фефёлка', 'фофан','фуфло',
		'хуй','охуе[а-я]+','хуяч[а-я]+','хуяр[а-я]+','хуяк[а-я]+','хайло', 'халда','хлюст','хмырь','холуй','холуйство','холуйствовать','хрен','хреновина','хрыч','хряк' ,
		'целка',
		'чмо','черножопый','чернозадый','черномазый','чинодрал','чурбан','чучело',
		'шлюш[а-я]+','шлюха','шваль','шалава','шалашовка','шантрапа','шваль','шизоид','шлюха','шлюшка',
		'щекотильник',
		'эрекция',
		'юлда',
		'ядрёна','ядрена','ядрить'
	);
	 
	/**
	 * Replaces abusive words from string
	 *
	 * @param string $string - original text	 
	 * @return string - cleaned text
	 */	
	 
	 public static function replace ( $string ) {
		$words = explode(' ',$string);
		//var_dump($words);
		foreach ($words as $key=>$w){
			foreach (self::$patterns as $p) {
				if(preg_match(self::prepare($p),$w)) $words[$key] = self::REPLACEMENT;
			}
		}
		//var_dump($words);
		return implode(' ',$words);
	}

	/**
	 * Clean indexes in $_POST from spam 
	 *
	 * @param string|array $data - indexes in $_POST
	 * @return void
	 */
	public static function cleanPost () {
		$data = func_get_args();
		foreach($data as $index) {
			if(isset($_POST[$index])) {
				$_POST[$index] = self::replace($_POST[$index]);
			}
		}
	}

	/**
	 * Searches if there any abusive words in the text . 
	 *
	 * @param string $string - original text
	 * @return boolean - is there any abusive words in our string
	 */
	public static function is_bad ( $string ) {
		foreach (self::$patterns as $p) {
			if(preg_match(self::prepare($p),$string)) return true;
		}
		return false; 
	}

	private static function prepare ( $pattern ) {
		return '/^'.$pattern.'$/iu';
	}

}